<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Answer extends Model
{
    use VotableTrait;
    public const VOTE_DOWN = -1;
    public const VOTE_UP = 1;

    protected $fillable =[
        'body',
        'user_id'
    ];

    protected $appends = [
        'created_date',
        'body_html',
        'is_best'
    ];

    public function user() {
        return $this->belongsTo(User::class);
    }

    public function question() {
        return $this->belongsTo(Question::class);
    }

    public function getBodyHtmlAttribute() {
        return clean(\Parsedown::instance()->text($this->body));
    }

    public function getCreatedDateAttribute() {
        return $this->created_at->diffForHumans();
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(function ($answer){
            $answer->question->increment('answers_count');
        });

        static::deleted(function (Answer $answer) {
            $answer->question->decrement('answers_count');
        });
    }

    public function getStatusAttribute() {
        return $this->is_best ? 'vote-accepted' : '';
    }

    public function getIsBestAttribute() {
        return $this->id === $this->question->best_answer_id;
    }
}
